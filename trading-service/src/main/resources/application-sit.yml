spring:
  datasource:
    url: jdbc:postgresql://aws-jp-google-allmodule-pg-nonprod.ckcvjkzxh8bd.ap-northeast-1.rds.amazonaws.com:5432/trade_sit?prepareThreshold=0
    username: trade_readwrite_sit
    password: iHrlH^4Z915HQ#WHP1Dk7b
    driver-class-name: org.postgresql.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 20  # 初始化时建立物理连接的个数
      max-active: 200 # 最大连接池数量
      max-wait: 5000 # 最大等待ms
      min-idle: 20  # 最小连接池数量
      use-unfair-lock: true
  redis:
    host: master.aws-jp-google-allmodule-redis-nonprod.8loycm.apne1.cache.amazonaws.com
    port: 6379
    password: zaBuQ#AAuDyT)ybLxR3IoB
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: 5
        time-between-eviction-runs: 60000
    database: 1
    timeout: 5000
    ssl: true
  kafka:
    bootstrap-servers: b-2.google-alltest.7n9wg1.c2.kafka.ap-northeast-1.amazonaws.com:9096,b-3.google-alltest.7n9wg1.c2.kafka.ap-northeast-1.amazonaws.com:9096,b-1.google-alltest.7n9wg1.c2.kafka.ap-northeast-1.amazonaws.com:9096
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 0
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: google-google-trade-service-group-sit
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule required username=mskuser password=mskuser-wkp1gGGnZR;
        mechanism: SCRAM-SHA-512
      security:
        protocol: SASL_SSL
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration

#资金模块地址
asset:
  host: http://apisix-gateway.apisix-sit/asset
#风控模块地址
risk:
  host: http://apisix-gateway.apisix-sit/risk-control
  topic:
    reduce-position: google-google-trading-reduce-position-sit
    cancel-order: google-google-trading-cancel-order-sit
    liquid-spot: google-google-trading-liquid-spot-sit
    liquid-balance: google-google-trading-liquid-balance-sit
    user-setting: google-google-trading-user-setting-sit
    position-open: google-google-trading-position-open-sit
    position-change: google-google-trading-position-change-sit
#发单模块
pdt:
  server:
    host: http://apisix-gateway.apisix-sit
  redis:
#    master.aws-jp-google-crex-redis-sit.8loycm.apne1.cache.amazonaws.com
    host: master.aws-jp-google-crex-redis-sit.8loycm.apne1.cache.amazonaws.com
    port: 6379
    password: DB7SEU8tzA#MScnhm1pnJ
    timeout: 6000
    database: 0
    ssl: true
common-config:
  host: http://apisix-gateway.apisix-sit/common-config
kline:
  host: http://apisix-gateway.apisix-sit/kline
kline-coingecko:
  host: https://kline-api.googleainsider.com
#用户量模块
user-center:
  host: http://apisix-gateway.apisix-sit/user-center
# ClubServer
club:
  host: http://apisix-gateway.apisix-sit/club
knife4j:
  enable: true
  production: false
alarm:
  host: https://alarm.googleainsider.com/server/alarm_server
kafka:
  topic:
    ws-push: "google-google-ws-event-sit"
    usertouch-push: google-google-usercenter-usertouch-sit
    funding-push: google-google-referral-funding-trading-sit
    aceup-tradefee-config-consumer: google-google-aceup-trade-fee-config-sit
    buy-crypt-result: google-google-trading-buycrypto-convertion-sit
    aip-swap-place-order-consumer: google-google-trade-swapplaceorder-sit
    aip-swap-place-order-push: google-google-aip-swapplaceorder-sit
    algo-transaction-statistics-consumer: google-google-trading-transaction-statistics-sit
place:
  max-num: 500
trade:
  otc-booking:
    uid-arr:
      - "61764ad038f16e6a3fa63536"
  traders:
    uid-arr:
      - "60e303385e34ea17ffec799a"
  idk:
    uid-arr:
      - "616b94a638f16e6a3fa634be"
  sensors:
    log-path: /sensordata/google-trading/${HOSTNAME}-log/service.log
xxl:
  job.admin.addresses: https://google-task-sit.googlesider.com/xxl-job-admin
  job.accessToken: UnlUUHxdAipd
  job.executor:
    appname: trading-service-task-${spring.profiles.active}
    address:
    ip: google-trading-svc.google-${spring.profiles.active}.svc
    port: 9999
    logpath: ./log/xxl-job/
    logretentiondays: 30
sentry:
  dsn: https://b1ae700aa61c4d48b15987303ee1fa7f@sentry-sit.googleainsider.com/50
  enable-uncaught-exception-handler: true
  debug: true
  environment: sit
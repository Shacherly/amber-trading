<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.google.backend.trading.dao.mapper.TradeTransactionAmountMapper">
    <resultMap id="BaseResultMap" type="com.google.backend.trading.dao.model.TradeTransactionAmount">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="amount" jdbcType="NUMERIC" property="amount"/>
        <result column="ctime" jdbcType="TIMESTAMP" property="ctime"/>
        <result column="trans_id" jdbcType="VARCHAR" property="transId"/>
    </resultMap>
    <insert id="batchInsert">
        insert into trade_transaction_amount (uid, amount, ctime, trans_id) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.uid,jdbcType=VARCHAR}, #{item.amount,jdbcType=NUMERIC}, #{item.ctime,jdbcType=TIMESTAMP},
            #{item.transId,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <select id="sumAmountByUserIdAndCtime" resultType="java.math.BigDecimal">
        select COALESCE(sum(amount), 0)
        from trade_transaction_amount
        where uid = #{uid}
          and ctime between #{start} and #{end}
    </select>
    <select id="getUserIdListByTime" resultType="java.lang.String">
        select distinct uid
        from trade_transaction_amount
        where ctime between #{start} and #{end}
        order by uid
    </select>
</mapper>
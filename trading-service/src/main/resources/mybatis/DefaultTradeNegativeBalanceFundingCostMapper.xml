<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.google.backend.trading.dao.mapper.DefaultTradeNegativeBalanceFundingCostMapper">
  <resultMap id="BaseResultMap" type="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCost">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="quantity" jdbcType="NUMERIC" property="quantity" />
    <result column="funding_cost" jdbcType="NUMERIC" property="fundingCost" />
    <result column="coin" jdbcType="VARCHAR" property="coin" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
    <result column="lend" jdbcType="NUMERIC" property="lend" />
    <result column="borrow" jdbcType="NUMERIC" property="borrow" />
    <result column="round" jdbcType="BIGINT" property="round" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, uuid, uid, status, quantity, funding_cost, coin, price, ctime, mtime, lend, borrow, 
    round
  </sql>
  <select id="selectByExample" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCostExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_negative_balance_funding_cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from trade_negative_balance_funding_cost
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trade_negative_balance_funding_cost
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCostExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trade_negative_balance_funding_cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCost" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trade_negative_balance_funding_cost (uuid, uid, status, 
      quantity, funding_cost, coin, 
      price, ctime, mtime, 
      lend, borrow, round)
    values (#{uuid,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=NUMERIC}, #{fundingCost,jdbcType=NUMERIC}, #{coin,jdbcType=VARCHAR}, 
      #{price,jdbcType=NUMERIC}, #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, 
      #{lend,jdbcType=NUMERIC}, #{borrow,jdbcType=NUMERIC}, #{round,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCost" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trade_negative_balance_funding_cost
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="fundingCost != null">
        funding_cost,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="lend != null">
        lend,
      </if>
      <if test="borrow != null">
        borrow,
      </if>
      <if test="round != null">
        round,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=NUMERIC},
      </if>
      <if test="fundingCost != null">
        #{fundingCost,jdbcType=NUMERIC},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lend != null">
        #{lend,jdbcType=NUMERIC},
      </if>
      <if test="borrow != null">
        #{borrow,jdbcType=NUMERIC},
      </if>
      <if test="round != null">
        #{round,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCostExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from trade_negative_balance_funding_cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trade_negative_balance_funding_cost
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=NUMERIC},
      </if>
      <if test="record.fundingCost != null">
        funding_cost = #{record.fundingCost,jdbcType=NUMERIC},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=NUMERIC},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null">
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lend != null">
        lend = #{record.lend,jdbcType=NUMERIC},
      </if>
      <if test="record.borrow != null">
        borrow = #{record.borrow,jdbcType=NUMERIC},
      </if>
      <if test="record.round != null">
        round = #{record.round,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trade_negative_balance_funding_cost
    set id = #{record.id,jdbcType=BIGINT},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=NUMERIC},
      funding_cost = #{record.fundingCost,jdbcType=NUMERIC},
      coin = #{record.coin,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=NUMERIC},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      lend = #{record.lend,jdbcType=NUMERIC},
      borrow = #{record.borrow,jdbcType=NUMERIC},
      round = #{record.round,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCost">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trade_negative_balance_funding_cost
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=NUMERIC},
      </if>
      <if test="fundingCost != null">
        funding_cost = #{fundingCost,jdbcType=NUMERIC},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lend != null">
        lend = #{lend,jdbcType=NUMERIC},
      </if>
      <if test="borrow != null">
        borrow = #{borrow,jdbcType=NUMERIC},
      </if>
      <if test="round != null">
        round = #{round,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.google.backend.trading.dao.model.TradeNegativeBalanceFundingCost">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trade_negative_balance_funding_cost
    set uuid = #{uuid,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=NUMERIC},
      funding_cost = #{fundingCost,jdbcType=NUMERIC},
      coin = #{coin,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      lend = #{lend,jdbcType=NUMERIC},
      borrow = #{borrow,jdbcType=NUMERIC},
      round = #{round,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
package com.google.backend.trading.model.common.model.config;

import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.backend.trading.model.common.jackson.BigDecimalStringSerializer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import javax.validation.constraints.NotNull;
import java.math.BigDecimal;

/**
 * 用户交易设置
 * @author adam.wang
 */
@Data
@ApiModel(value = "用户配置")
@JsonNaming(PropertyNamingStrategy.SnakeCaseStrategy.class)
public class UserTradeSettingVo {


    /**
     * Database Column Remarks:
     *   杠杆倍数
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.leverage
     *
     * @mbg.generated
     */
    @NotNull(message = "leverage must not be null")
    @ApiModelProperty(value = "调整杠杆", required = true, example = "5")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal leverage;

    /**
     * Database Column Remarks:
     *   全仓止损
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.max_loss
     *
     * @mbg.generated
     */
    @ApiModelProperty(name ="max_loss",value = "全仓止损", example = "1")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal maxLoss;

    /**
     * Database Column Remarks:
     *   全仓止盈
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.take_profit
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="take_profit",value = "全仓止盈", example = "1")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal takeProfit;

    /**
     * Database Column Remarks:
     *   理财质押
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.earn_pledge
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="earn_pledge",value = "理财资产质押", example = "true")
    private Boolean earnPledge;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.default_coin
     *
     * @mbg.generated
     */
    @NotNull(message = "defaultCoin must not be null")
    @ApiModelProperty(name="default_coin",value = "默认货币", required = true, example = "BTC")
    private String defaultCoin;

    /**
     * Database Column Remarks:
     *   结算时区
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.settle_time_zone
     *
     * @mbg.generated
     */
    @NotNull(message = "settle_time_zone must not be null")
    @ApiModelProperty(name="settle_time_zone_id",value = "结算时区", example = "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi")
    private String settleTimeZoneId;

    /**
     * Database Column Remarks:
     *   自动交割
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.auto_settle
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="auto_settle",value = "全局自动交割", example = "true")
    private Boolean autoSettle;

    /**
     * Database Column Remarks:
     *   自动平负余额
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.auto_fix_negative
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="auto_fix_negative",value = "自动平负余额", example = "true")
    private Boolean autoFixNegative;

    /**
     * Database Column Remarks:
     *   清算理财资产
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.liquid_earn
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="liquid_earn",value = "自动清算理财资产", example = "true")
    private Boolean liquidEarn;

    /**
     * 邮件通知
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.email_notification
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="email_notification",value = "邮件通知", example = "true")
    private Boolean emailNotification;

    /**
     * Database Column Remarks:
     *   订单二次确认
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.reconfirm_order
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="reconfirm_order",value = "二次确认", example = "true")
    private Boolean reconfirmOrder;



    /**
     * Database Column Remarks:
     *   双击下单
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.double_click_place_order
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="double_click_place_order",value = "双击下单", example = "true")
    private Boolean doubleClickPlaceOrder;

    /**
     * Database Column Remarks:
     *   自动转换
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column trade_user_trade_setting.auto_convert
     *
     * @mbg.generated
     */
    @ApiModelProperty(name="auto_convert",value = "自动转换", example = "true")
    private Boolean autoConvert;


    @ApiModelProperty(name="zone_offset_seconds",value = "时区偏移秒数", example = "0")
    private Integer zoneOffsetSeconds = 0;

    /**
     * 最小止损值 >= 当前仓位亏损值
     */
    @ApiModelProperty(name="min_stop_loss",value = "可设置的最小止损值", example = "1000")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal minStopLoss = new BigDecimal("0");

    /**
     * 最大止损值 <= 总保证金 * 85 %
     */
    @ApiModelProperty(name="max_stop_loss",value = "可设置的最大止损值", example = "1000000")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal maxStopLoss = new BigDecimal("0");

    /**
     * 最小止盈值 >= 当前仓位亏损值
     */
    @ApiModelProperty(name="min_stop_loss",value = "可设置的最小止盈值", example = "1000")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal minTakeProfit = new BigDecimal("0");

    /**
     * 最大止盈值 <= 100000000
     */
    @ApiModelProperty(name="max_stop_loss",value = "可设置的最大止盈值", example = "1000000")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal maxTakeProfit = new BigDecimal("100000000");


    @ApiModelProperty(name="position_limit",value = "持仓限额", example = "1000000")
    @JsonSerialize(using = BigDecimalStringSerializer.class)
    private BigDecimal positionLimit = new BigDecimal("80000000");

    /**
     * 使用硬编码交易员账号方式来处理
     */
    @ApiModelProperty(value = "支持order备注", example = "true")
    private boolean enableOrderNotes = false;

    @ApiModelProperty(name = "exist_margin_active_order", value = "是否存在杠杆活跃订单", example = "false")
    private boolean existMarginActiveOrder = true;

}